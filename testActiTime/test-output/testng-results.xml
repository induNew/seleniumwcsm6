<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
    <line>
      <![CDATA[test script execution started]]>
    </line>
    <line>
      <![CDATA[Test execution has been started]]>
    </line>
    <line>
      <![CDATA[screenshot has been taken]]>
    </line>
    <line>
      <![CDATA[Test execution has been started]]>
    </line>
    <line>
      <![CDATA[Test script  has been executed successfully]]>
    </line>
    <line>
      <![CDATA[Test execution has been started]]>
    </line>
    <line>
      <![CDATA[Test script  has been executed successfully]]>
    </line>
  </reporter-output>
  <suite name="Suite" duration-ms="89912" started-at="2022-02-28T09:07:42 IST" finished-at="2022-02-28T09:09:12 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="89912" started-at="2022-02-28T09:07:42 IST" finished-at="2022-02-28T09:09:12 IST">
      <class name="testPackage.TestActiTimeValidLogin">
        <test-method status="PASS" signature="openBrowser()[pri:0, instance:testPackage.TestActiTimeValidLogin@6ee52dcd]" name="openBrowser" is-config="true" duration-ms="9049" started-at="2022-02-28T09:07:42 IST" finished-at="2022-02-28T09:07:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method status="FAIL" signature="testActiTimeValidlogin()[pri:0, instance:testPackage.TestActiTimeValidLogin@6ee52dcd]" name="testActiTimeValidlogin" duration-ms="2971" started-at="2022-02-28T09:07:51 IST" finished-at="2022-02-28T09:07:54 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [suraj] but found [actiTIME - Enter Time-Track]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [suraj] but found [actiTIME - Enter Time-Track]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at testPackage.TestActiTimeValidLogin.testActiTimeValidlogin(TestActiTimeValidLogin.java:32)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[Test execution has been started]]>
            </line>
            <line>
              <![CDATA[screenshot has been taken]]>
            </line>
          </reporter-output>
        </test-method> <!-- testActiTimeValidlogin -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:testPackage.TestActiTimeValidLogin@6ee52dcd]" name="closeBrowser" is-config="true" duration-ms="744" started-at="2022-02-28T09:07:55 IST" finished-at="2022-02-28T09:07:55 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testPackage.TestActiTimeValidLogin -->
      <class name="testPackage.TestActiTimeLogout">
        <test-method status="PASS" signature="openBrowser()[pri:0, instance:testPackage.TestActiTimeLogout@fad74ee]" name="openBrowser" is-config="true" duration-ms="7284" started-at="2022-02-28T09:07:55 IST" finished-at="2022-02-28T09:08:03 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method status="PASS" signature="testActiTimeLogout()[pri:0, instance:testPackage.TestActiTimeLogout@fad74ee]" name="testActiTimeLogout" duration-ms="1165" started-at="2022-02-28T09:08:03 IST" finished-at="2022-02-28T09:08:04 IST">
          <reporter-output>
            <line>
              <![CDATA[Test execution has been started]]>
            </line>
            <line>
              <![CDATA[Test script  has been executed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- testActiTimeLogout -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:testPackage.TestActiTimeLogout@fad74ee]" name="closeBrowser" is-config="true" duration-ms="656" started-at="2022-02-28T09:08:04 IST" finished-at="2022-02-28T09:08:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testPackage.TestActiTimeLogout -->
      <class name="testPackage.TestActiTimeInvalidLogin">
        <test-method status="PASS" signature="openBrowser()[pri:0, instance:testPackage.TestActiTimeInvalidLogin@1a1d6a08]" name="openBrowser" is-config="true" duration-ms="7351" started-at="2022-02-28T09:08:05 IST" finished-at="2022-02-28T09:08:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openBrowser -->
        <test-method status="PASS" signature="testActiTimeInValidlogin()[pri:0, instance:testPackage.TestActiTimeInvalidLogin@1a1d6a08]" name="testActiTimeInValidlogin" duration-ms="59492" started-at="2022-02-28T09:08:12 IST" finished-at="2022-02-28T09:09:11 IST">
          <reporter-output>
            <line>
              <![CDATA[Test execution has been started]]>
            </line>
            <line>
              <![CDATA[Test script  has been executed successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- testActiTimeInValidlogin -->
        <test-method status="PASS" signature="closeBrowser()[pri:0, instance:testPackage.TestActiTimeInvalidLogin@1a1d6a08]" name="closeBrowser" is-config="true" duration-ms="637" started-at="2022-02-28T09:09:11 IST" finished-at="2022-02-28T09:09:12 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeBrowser -->
      </class> <!-- testPackage.TestActiTimeInvalidLogin -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
